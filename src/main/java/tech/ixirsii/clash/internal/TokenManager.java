package tech.ixirsii.clash.internal;

import com.fasterxml.jackson.databind.ObjectMapper;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import okhttp3.Call;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;
import tech.ixirsii.clash.exception.APIKeyException;
import tech.ixirsii.clash.exception.ClashAPIException;

import java.io.IOException;

/**
 * Clash of Clans API token manager.
 *
 * @author Ryan Porterfield
 * @since 1.0.0
 */
@RequiredArgsConstructor
@Slf4j
public class TokenManager {
    /**
     * Clash of Clans developer portal API URL.
     */
    private static final String DEVELOPER_URL = "https://developer.clashofclans.com/api";

    /**
     * HTTP client.
     */
    private final OkHttpClient client;
    /**
     * Developer portal email address.
     */
    private final String email;
    /**
     * Jackson (de)serializer.
     */
    private final ObjectMapper mapper;
    /**
     * Developer portal password.
     */
    private final String password;

    /**
     * Get a Clash of Clans API token for the current IP address.
     *
     * @return Clash of Clans API token for the current IP address.
     * @throws ClashAPIException On failure to get token.
     */
    public String getToken() throws ClashAPIException {
        log.trace("Getting API token");

        final String description = getKeyDescription();
        final String ip = getIP();
        final String name = getKeyName();

        return description + ip + name;
    }

    /* ********************************************************************************************************** *
     *                                          Private utility functions                                         *
     * ********************************************************************************************************** */

    /**
     * Get the current IP address.
     *
     * @return Current IP address.
     * @throws APIKeyException On failure to get IP address.
     */
    private String getIP() throws APIKeyException {
        log.trace("Getting current IP address");

        final Request request = new Request.Builder().url("https://checkip.amazonaws.com").build();
        final Call call = client.newCall(request);

        try (Response response = call.execute()) {
            if (response.isSuccessful()) {
                final String ipAddress = response.body().string().trim();

                log.debug("Current IP address: {}", ipAddress);

                return ipAddress;
            } else {
                log.error("Error getting current IP address: {} - {}", response.code(), response.message());

                throw new APIKeyException("Error getting current IP address");
            }
        } catch (final IOException e) {
            log.error("Caught exception while attempting to get IP address", e);

            throw new APIKeyException("Error getting current IP address", e);
        }
    }

    /**
     * Get API key description.
     *
     * @return API key description.
     */
    private String getKeyDescription() {
        final String systemDescription = System.getenv("API_DESCRIPTION");

        if (systemDescription == null || systemDescription.isBlank()) {
            return "Automatically generated by Clash4J";
        } else {
            return systemDescription;
        }
    }

    /**
     * Get API key name.
     *
     * @return API key name.
     */
    private String getKeyName() {
        final String systemName = System.getenv("API_NAME");

        if (systemName == null || systemName.isBlank()) {
            return "Clash4J";
        } else {
            return systemName;
        }
    }
}
